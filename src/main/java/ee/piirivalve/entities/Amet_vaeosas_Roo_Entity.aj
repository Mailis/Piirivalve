// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.piirivalve.entities;

import ee.piirivalve.entities.Amet_vaeosas;
import java.lang.Integer;
import java.lang.Long;
import java.util.List;
import javax.persistence.Column;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Version;
import org.springframework.transaction.annotation.Transactional;

privileged aspect Amet_vaeosas_Roo_Entity {
    
    @PersistenceContext
    transient EntityManager Amet_vaeosas.entityManager;
    
    @Version
    @Column(name = "version")
    private Integer Amet_vaeosas.version;
    
    public Integer Amet_vaeosas.getVersion() {
        return this.version;
    }
    
    public void Amet_vaeosas.setVersion(Integer version) {
        this.version = version;
    }
    
    @Transactional
    public void Amet_vaeosas.persist() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.persist(this);
    }
    
    @Transactional
    public void Amet_vaeosas.remove() {
        if (this.entityManager == null) this.entityManager = entityManager();
        if (this.entityManager.contains(this)) {
            this.entityManager.remove(this);
        } else {
            Amet_vaeosas attached = Amet_vaeosas.findAmet_vaeosas(this.id);
            this.entityManager.remove(attached);
        }
    }
    
    @Transactional
    public void Amet_vaeosas.flush() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.flush();
    }
    
    @Transactional
    public void Amet_vaeosas.clear() {
        if (this.entityManager == null) this.entityManager = entityManager();
        this.entityManager.clear();
    }
    
    @Transactional
    public Amet_vaeosas Amet_vaeosas.merge() {
        if (this.entityManager == null) this.entityManager = entityManager();
        Amet_vaeosas merged = this.entityManager.merge(this);
        this.entityManager.flush();
        return merged;
    }
    
    public static final EntityManager Amet_vaeosas.entityManager() {
        EntityManager em = new Amet_vaeosas().entityManager;
        if (em == null) throw new IllegalStateException("Entity manager has not been injected (is the Spring Aspects JAR configured as an AJC/AJDT aspects library?)");
        return em;
    }
    
    public static long Amet_vaeosas.countAmet_vaeosases() {
        return entityManager().createQuery("SELECT COUNT(o) FROM Amet_vaeosas o", Long.class).getSingleResult();
    }
    
    public static List<Amet_vaeosas> Amet_vaeosas.findAllAmet_vaeosases() {
        return entityManager().createQuery("SELECT o FROM Amet_vaeosas o", Amet_vaeosas.class).getResultList();
    }
    
    public static Amet_vaeosas Amet_vaeosas.findAmet_vaeosas(Long id) {
        if (id == null) return null;
        return entityManager().find(Amet_vaeosas.class, id);
    }
    
    public static List<Amet_vaeosas> Amet_vaeosas.findAmet_vaeosasEntries(int firstResult, int maxResults) {
        return entityManager().createQuery("SELECT o FROM Amet_vaeosas o", Amet_vaeosas.class).setFirstResult(firstResult).setMaxResults(maxResults).getResultList();
    }
    
}
